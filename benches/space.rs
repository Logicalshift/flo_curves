use criterion::{criterion_group, criterion_main, Criterion};

use flo_curves::geo::*;

use itertools::*;

///
/// Test space generated by a circle
///
fn circle_space() -> Space1D<(Coord2, Coord2)> {
    // Points generated for a flattened polyline circle
    let points = vec![
        Coord2(1341.8376618407356, 921.8376618407356),
        Coord2(1360.990132477209, 901.6915016118987),
        Coord2(1378.906959846813, 880.8255942276668),
        Coord2(1395.588143949548, 859.2879228317324),
        Coord2(1411.0336847854135, 837.1264705677888),
        Coord2(1425.24358235441, 814.3892205795288),
        Coord2(1438.2178366565372, 791.1241560106457),
        Coord2(1449.9564476917953, 767.3792600048322),
        Coord2(1460.4594154601837, 743.2025157057816),
        Coord2(1469.726739961703, 718.6419062571867),
        Coord2(1477.7584211963533, 693.7454148027408),
        Coord2(1484.5544591641342, 668.5610244861367),
        Coord2(1490.114853865046, 643.1367184510676),
        Coord2(1494.4396052990883, 617.5204798412262),
        Coord2(1497.5287134662613, 591.7602918003058),
        Coord2(1499.382178366565, 565.9041374719994),
        Coord2(1499.9999999999995, 540.0),
        Coord2(1499.3821783665653, 514.0958625280006),
        Coord2(1497.5287134662613, 488.2397081996941),
        Coord2(1494.439605299088, 462.47952015877377),
        Coord2(1490.114853865046, 436.86328154893243),
        Coord2(1484.5544591641342, 411.4389755138632),
        Coord2(1477.7584211963533, 386.25458519725913),
        Coord2(1469.726739961703, 361.35809374281314),
        Coord2(1460.4594154601837, 336.79748429421835),
        Coord2(1449.956447691795, 312.62073999516775),
        Coord2(1438.2178366565372, 288.8758439893543),
        Coord2(1425.2435823544101, 265.6107794204711),
        Coord2(1411.0336847854137, 242.87352943221117),
        Coord2(1395.5881439495479, 220.7120771682675),
        Coord2(1378.9069598468132, 199.17440577233313),
        Coord2(1360.990132477209, 178.3084983881011),
        Coord2(1341.8376618407356, 158.16233815926438),
        Coord2(1321.691501611899, 139.00986752279096),
        Coord2(1300.8255942276667, 121.09304015318679),
        Coord2(1279.2879228317324, 104.41185605045189),
        Coord2(1257.1264705677886, 88.96631521458622),
        Coord2(1234.3892205795287, 74.75641764558982),
        Coord2(1211.1241560106455, 61.78216334346266),
        Coord2(1187.379260004832, 50.04355230820476),
        Coord2(1163.2025157057817, 39.5405845398161),
        Coord2(1138.6419062571867, 30.273260038296712),
        Coord2(1113.7454148027407, 22.24157880364656),
        Coord2(1088.5610244861366, 15.445540835865675),
        Coord2(1063.1367184510673, 9.885146134954036),
        Coord2(1037.5204798412262, 5.560394700911651),
        Coord2(1011.7602918003058, 2.4712865337385175),
        Coord2(985.9041374719994, 0.6178216334346338),
        Coord2(959.9999999999999, 7.105427357601002e-15),
        Coord2(934.0958625280006, 0.6178216334346338),
        Coord2(908.2397081996942, 2.471286533738514),
        Coord2(882.4795201587738, 5.56039470091164),
        Coord2(856.8632815489325, 9.88514613495402),
        Coord2(831.4389755138633, 15.445540835865657),
        Coord2(806.2545851972592, 22.24157880364655),
        Coord2(781.3580937428131, 30.273260038296684),
        Coord2(756.7974842942183, 39.54058453981608),
        Coord2(732.6207399951677, 50.04355230820473),
        Coord2(708.8758439893545, 61.78216334346263),
        Coord2(685.6107794204711, 74.75641764558978),
        Coord2(662.8735294322113, 88.96631521458619),
        Coord2(640.7120771682676, 104.41185605045185),
        Coord2(619.1744057723332, 121.09304015318673),
        Coord2(598.3084983881012, 139.00986752279093),
        Coord2(578.1623381592644, 158.16233815926432),
        Coord2(559.0098675227911, 178.30849838810104),
        Coord2(541.0930401531867, 199.17440577233307),
        Coord2(524.411856050452, 220.7120771682675),
        Coord2(508.96631521458625, 242.87352943221114),
        Coord2(494.7564176455898, 265.6107794204711),
        Coord2(481.7821633434627, 288.8758439893542),
        Coord2(470.04355230820477, 312.62073999516764),
        Coord2(459.5405845398161, 336.7974842942183),
        Coord2(450.2732600382967, 361.3580937428131),
        Coord2(442.2415788036466, 386.254585197259),
        Coord2(435.4455408358657, 411.43897551386317),
        Coord2(429.885146134954, 436.8632815489324),
        Coord2(425.5603947009117, 462.4795201587737),
        Coord2(422.47128653373846, 488.23970819969406),
        Coord2(420.6178216334346, 514.0958625280005),
        Coord2(420.0, 540.0),
        Coord2(420.6178216334346, 565.9041374719993),
        Coord2(422.47128653373846, 591.7602918003058),
        Coord2(425.56039470091156, 617.5204798412262),
        Coord2(429.88514613495397, 643.1367184510675),
        Coord2(435.4455408358656, 668.5610244861367),
        Coord2(442.24157880364646, 693.7454148027408),
        Coord2(450.2732600382966, 718.6419062571867),
        Coord2(459.540584539816, 743.2025157057816),
        Coord2(470.04355230820465, 767.3792600048322),
        Coord2(481.78216334346257, 791.1241560106455),
        Coord2(494.7564176455897, 814.3892205795288),
        Coord2(508.9663152145861, 837.1264705677887),
        Coord2(524.4118560504518, 859.2879228317324),
        Coord2(541.0930401531866, 880.8255942276669),
        Coord2(559.0098675227908, 901.6915016118988),
        Coord2(578.1623381592642, 921.8376618407356),
        Coord2(598.308498388101, 940.9901324772089),
        Coord2(619.1744057723331, 958.9069598468133),
        Coord2(640.7120771682673, 975.588143949548),
        Coord2(662.8735294322111, 991.0336847854137),
        Coord2(685.6107794204711, 1005.2435823544101),
        Coord2(708.8758439893542, 1018.2178366565371),
        Coord2(732.6207399951677, 1029.9564476917951),
        Coord2(756.7974842942183, 1040.459415460184),
        Coord2(781.358093742813, 1049.7267399617033),
        Coord2(806.2545851972591, 1057.7584211963533),
        Coord2(831.4389755138633, 1064.5544591641344),
        Coord2(856.8632815489324, 1070.114853865046),
        Coord2(882.4795201587737, 1074.4396052990883),
        Coord2(908.2397081996941, 1077.5287134662615),
        Coord2(934.0958625280006, 1079.382178366565),
        Coord2(959.9999999999999, 1080.0),
        Coord2(985.9041374719993, 1079.3821783665653),
        Coord2(1011.7602918003058, 1077.5287134662615),
        Coord2(1037.5204798412262, 1074.4396052990883),
        Coord2(1063.1367184510673, 1070.114853865046),
        Coord2(1088.5610244861366, 1064.5544591641342),
        Coord2(1113.7454148027407, 1057.7584211963533),
        Coord2(1138.6419062571867, 1049.7267399617033),
        Coord2(1163.2025157057815, 1040.459415460184),
        Coord2(1187.3792600048323, 1029.9564476917951),
        Coord2(1211.1241560106455, 1018.2178366565372),
        Coord2(1234.3892205795287, 1005.2435823544101),
        Coord2(1257.1264705677886, 991.0336847854137),
        Coord2(1279.2879228317324, 975.5881439495481),
        Coord2(1300.8255942276667, 958.9069598468132),
        Coord2(1321.691501611899, 940.9901324772089),
        Coord2(1341.8376618407356, 921.8376618407356),
    ];

    Space1D::from_data(points.into_iter()
        .tuple_windows()
        .map(|(start, end)| {
            ((start.y().min(end.y())..(start.y().max(end.y()))), (start, end))
        }))
}

fn criterion_benchmark(c: &mut Criterion) {
    use std::hint::{black_box};

    let circle_space = circle_space();

    c.bench_function("look_up_data", |b| b.iter(|| black_box(circle_space.data_at_point(500.0).collect::<Vec<_>>())));
    c.bench_function("look_up_all_data_in_frame", |b| b.iter(|| (0..1080).for_each(|y| { black_box(circle_space.data_at_point(y as _).collect::<Vec<_>>()); })));
    c.bench_function("look_up_all_data_in_frame_using_region", |b| b.iter(|| { black_box(circle_space.data_in_region(0.0..1080.0).collect::<Vec<_>>()); }));
    c.bench_function("all_regions", |b| b.iter(|| black_box(circle_space.all_regions().collect::<Vec<_>>())));
}

criterion_group!(benches, criterion_benchmark);
criterion_main!(benches);
